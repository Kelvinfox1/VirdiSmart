{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\devfolder\\\\X\\\\ReactNativeApp\\\\screens\\\\SignupScreen.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { Button, TextInput } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function SignupScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cpass = _useState6[0],\n      setcPass = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      err = _useState8[0],\n      setError = _useState8[1];\n\n  var validatePassword = function validatePassword() {\n    if (password === cpass) return true;else return false;\n  };\n\n  sendCred = function sendCred(props) {\n    var isValid = validatePassword();\n\n    if (isValid) {\n      console.log(email, password);\n      fetch(\"http://192.168.43.198:3000/signup\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"email\": email,\n          \"password\": password\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function _callee(data) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(data);\n                _context.prev = 1;\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', data.token));\n\n              case 4:\n                props.navigation.navigate(\"login\");\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(\"Error Async Storage\", _context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[1, 7]], Promise);\n      });\n    } else {\n      setError(\"Password do not match!\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      marginTop: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 35,\n      marginLeft: 18,\n      marginTop: 35,\n      color: \"#3b3b3b\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Welcome to\"), React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      marginLeft: 18,\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"VirdiSmart\"), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      marginLeft: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Create new Account\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, err), React.createElement(TextInput, {\n    label: \"Email\",\n    mode: \"outlined\",\n    theme: {\n      colors: {\n        primary: \"blue\"\n      }\n    },\n    style: {\n      marginLeft: 18,\n      marginRight: 18,\n      marginTop: 18\n    },\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    mode: \"outlined\",\n    secureTextEntry: true,\n    theme: {\n      colors: {\n        primary: \"blue\"\n      }\n    },\n    style: {\n      marginLeft: 18,\n      marginRight: 18,\n      marginTop: 18\n    },\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"confirm password\",\n    mode: \"outlined\",\n    secureTextEntry: true,\n    theme: {\n      colors: {\n        primary: \"blue\"\n      }\n    },\n    style: {\n      marginLeft: 18,\n      marginRight: 18,\n      marginTop: 18\n    },\n    value: cpass,\n    onChangeText: function onChangeText(text) {\n      return setcPass(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: {\n      marginLeft: 18,\n      marginRight: 18,\n      marginTop: 18\n    },\n    onPress: function onPress() {\n      return sendCred(props);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Signup\"), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginLeft: 18,\n      marginTop: 20\n    },\n    onPress: function onPress() {\n      return props.navigation.navigate(\"login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Already have an account ?\"))));\n}","map":{"version":3,"sources":["D:/devfolder/X/ReactNativeApp/screens/SignupScreen.js"],"names":["StatusBar","React","useState","Button","TextInput","AsyncStorage","SignupScreen","props","email","setEmail","password","setPassword","cpass","setcPass","err","setError","validatePassword","sendCred","isValid","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","setItem","token","navigation","navigate","marginTop","fontSize","marginLeft","color","colors","primary","marginRight","text"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, KeyboardAvoidingView,ToastAndroid } from 'react-native';\nimport { Button, TextInput } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function SignupScreen(props) {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpass, setcPass] = useState();\n  const [err, setError]= useState('');\n\n  // const showToast = (msg) => {\n  //   ToastAndroid.show(msg,ToastAndroid.SHORT);\n  // };\n\n  const validatePassword=()=>{\n    if(password === cpass)\n      return true;\n    else  \n      return false;\n  }\n\n  sendCred= (props)=>{\n    var isValid = validatePassword();\n    if(isValid){\n\n      console.log(email,password) \n      fetch(\"http://192.168.43.198:3000/signup\",{\n        method:\"POST\",\n        headers:{\n          'Content-Type': 'application/json'\n        },\n        body:JSON.stringify({\n          \"email\":email,\n          \"password\":password\n        })\n      }).then(res=>res.json())\n      .then(async(data)=>{\n        console.log(data)\n        try {\n          await AsyncStorage.setItem('token', data.token)\n          props.navigation.navigate(\"login\")\n        } catch (e) {\n          // saving error\n          console.log(\"Error Async Storage\",e)\n        }\n      })\n    }\n    else{\n      setError(\"Password do not match!\")\n    }\n}\n\n\n\n  return (\n    <View style={{ marginTop: 40 }}>\n      <KeyboardAvoidingView behavior=\"position\">\n        <StatusBar backgroundColor=\"blue\" />\n        <Text style={{ fontSize: 35, marginLeft: 18, marginTop: 35, color: \"#3b3b3b\", }}>Welcome to</Text>\n        <Text style={{ fontSize: 30, marginLeft: 18, color: \"blue\" }}>VirdiSmart</Text>\n        <Text style={{\n          fontSize: 20, marginLeft: 18,\n        }}>Create new Account</Text>\n\n        <Text>{err}</Text>\n\n        <TextInput\n          label=\"Email\"\n          mode=\"outlined\"\n          theme={{ colors: { primary: \"blue\" } }}\n          style={{ marginLeft: 18, marginRight: 18, marginTop: 18 }}\n          value={email}\n          onChangeText={(text)=>setEmail(text)}\n        />\n\n        <TextInput\n          label=\"Password\"\n          mode=\"outlined\"\n          secureTextEntry={true}\n          theme={{ colors: { primary: \"blue\" } }}\n          style={{ marginLeft: 18, marginRight: 18, marginTop: 18 }}\n          value={password}\n          onChangeText={(text)=>setPassword(text)}\n        />\n\n\n        <TextInput\n        label=\"confirm password\"\n        mode=\"outlined\"\n        secureTextEntry={true}\n        theme={{ colors: { primary: \"blue\" } }}\n        style={{ marginLeft: 18, marginRight: 18, marginTop: 18 }}\n        value={cpass}\n        onChangeText={(text)=>setcPass(text)}\n      />\n\n        <Button\n          mode=\"contained\"\n          style={{ marginLeft: 18, marginRight: 18, marginTop: 18 }}\n          onPress={() => sendCred(props)}>\n          Signup\n    </Button>\n\n        <TouchableOpacity>\n          <Text style={{ fontSize: 18, marginLeft: 18, marginTop: 20 }}\n            onPress={() => props.navigation.navigate(\"login\")}\n          >\n            Already have an account ?\n      </Text>\n        </TouchableOpacity>\n\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}