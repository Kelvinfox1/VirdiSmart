{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\devfolder\\\\X\\\\ReactNativeApp\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StatusBar } from 'expo-status-bar';\nimport 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignupScreen from \"./screens/SignupScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoggedin = _useState2[0],\n      setLogged = _useState2[1];\n\n  function tk() {\n    var token;\n    return _regeneratorRuntime.async(function tk$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              setLogged(true);\n            } else {\n              setLogged(false);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    tk();\n  });\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"blue\",\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"loading\",\n    component: LoadingScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"signup\",\n    component: SignupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/devfolder/X/ReactNativeApp/App.js"],"names":["React","useEffect","useState","StatusBar","NavigationContainer","createStackNavigator","SignupScreen","LoginScreen","LoadingScreen","HomeScreen","AsyncStorage","Stack","App","isLoggedin","setLogged","tk","getItem","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAe,oBAAf;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;AAGA,eAAe,SAASO,GAAT,GAAe;AAAA,kBAEIV,QAAQ,CAAC,IAAD,CAFZ;AAAA;AAAA,MAErBW,UAFqB;AAAA,MAETC,SAFS;;AAI5B,WAAeC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACsBL,YAAY,CAACM,OAAb,CAAqB,OAArB,CADtB;;AAAA;AACQC,YAAAA,KADR;;AAEE,gBAAGA,KAAH,EAAS;AACPH,cAAAA,SAAS,CAAC,IAAD,CAAT;AACD,aAFD,MAEK;AACHA,cAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAb,EAAAA,SAAS,CAAC,YAAI;AAAEc,IAAAA,EAAE;AAAI,GAAb,CAAT;AAEA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,MAA3B;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEP,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEH,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAHF,CADF;AAYD","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport { StyleSheet, View, } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport {} from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack'\nimport SignupScreen from \"./screens/SignupScreen\"\nimport LoginScreen from \"./screens/LoginScreen\";\nimport LoadingScreen from './screens/LoadingScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst Stack = createStackNavigator();\n\n\nexport default function App() {\n\n  const [isLoggedin, setLogged] = useState(null)\n\n  async function tk(){\n    const token = await AsyncStorage.getItem('token')\n    if(token){\n      setLogged(true)\n    }else{\n      setLogged(false)\n    }\n  }\n  useEffect(()=>{ tk() })\n\n  return (\n    <NavigationContainer>\n    <StatusBar backgroundColor=\"blue\" style=\"light\"/>\n\n      <Stack.Navigator>\n        <Stack.Screen name=\"loading\" component={LoadingScreen} />\n        <Stack.Screen name=\"home\" component={HomeScreen} />  \n        <Stack.Screen name=\"signup\" component={SignupScreen} />\n        <Stack.Screen name=\"login\" component={LoginScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}